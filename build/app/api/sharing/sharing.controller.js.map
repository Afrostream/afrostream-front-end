{"version":3,"sources":["../../../../server/app/api/sharing/sharing.controller.js"],"names":[],"mappings":"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","file":"sharing.controller.js","sourcesContent":["import { getBodyWithoutAuth } from '../api-front'\nimport Q from 'q'\n\n/**\n * @param res           express object\n * @param getLocation   function\n * @return function (err, location) { }\n *   @redirect res 302 on success\n *   @redirect res 302 on error     FIXME: should be a 404\n */\nconst redirectOr404 = async function (res, getLocation) {\n  try {\n    var location = await getLocation()\n    console.log('location : ' + location)\n    res.status(302).set('location', location).send('')\n  } catch (err) {\n    console.error(err)\n    res.status(302).set('location', '/').send('') // FIXME: should send a 404\n  }\n}\n\nconst getMovieLocation = async function (req, movieId) {\n  const movie = await getBodyWithoutAuth(req, `/api/movies/${movieId}`)\n  return `/${movie._id}/${movie.slug}/`\n}\n\nconst getSeasonLocation = async function (req, seasonId) {\n  const season = await getBodyWithoutAuth(req, `/api/seasons/${seasonId}`)\n  return `/${season.movie._id}/${season.movie.slug}/${season._id}/${season.slug}/`\n}\n\nconst getEpisodeLocation = async function (req, episodeId) {\n  const episode = await getBodyWithoutAuth(req, `/api/episodes/${episodeId}`)\n  const season = await getBodyWithoutAuth(req, `/api/seasons/${episode.season._id}`)\n  return `/${season.movie._id}/${season.movie.slug}/${season._id}/${season.slug}/${episode._id}/${episode.slug}/`\n}\n\n/**\n * @param req.params.movieId\n * @redirect 302 to /:movieId/:movieSlug/   success\n * @redirect 302 to /                       error     FIXME: should be a 404\n */\nexport async function movie (req, res) {\n  redirectOr404(res, getMovieLocation.bind(null, req, req.params.movieId))\n}\n\n/**\n * @param req.params.movieId\n * @redirect 302 to /movieId:/:movieSlug/:seasonId/:seasonSlug/   success\n * @redirect 302 to /                       error     FIXME: should be a 404\n */\nexport function season (req, res) {\n  redirectOr404(res, getSeasonLocation.bind(null, req, req.params.seasonId))\n}\n\n/**\n * @param req.params.movieId\n * @redirect 302 to /movieId:/:movieSlug/:seasonId/:seasonSlug/:episodeId/:episodeSlug/   success\n * @redirect 302 to /                       error     FIXME: should be a 404\n */\nexport function episode (req, res) {\n  redirectOr404(res, getEpisodeLocation.bind(null, req, req.params.episodeId))\n}\n\n/**\n * @param req.params.movieId\n * @redirect 302 to /:movieId/:movieSlug/:videoId   success (video is a movie)\n * @redirect 302 to /movieId:/:movieSlug/:seasonId/:seasonSlug/:episodeId/:episodeSlug/:videoId   success (video is an episode)\n * @redirect 302 to /                       error     FIXME: should be a 404\n */\nexport function video (req, res) {\n  redirectOr404(res, async function getLocation () {\n    const video = await getBodyWithoutAuth(req, `/api/videos/${req.params.videoId}`)\n    let location = (video.episode) ? await getEpisodeLocation(req, video.episode._id) : await getMovieLocation(req, video.movie._id)\n    return location + video._id\n  })\n}\n"]}